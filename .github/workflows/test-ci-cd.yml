name: CI - Build and Push Docker Compose Images

on:
  push:
    branches:
      - test
  pull_request:
    branches:
      - test

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    env:
      COMPOSE_FILE: docker-compose.yml
      IMAGE_TAG: latest

    steps:
      # ðŸ§© STEP 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v4

      # ðŸ§© STEP 2: Set up Docker Buildx (for multi-platform builds)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ðŸ§© STEP 3: Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # ðŸ§© STEP 4: Build all services with Docker Compose
      - name: Build all images
        run: |
          echo "ðŸ”¨ Building Docker images using docker-compose..."
          docker compose -f $COMPOSE_FILE build --no-cache

      # ðŸ§© STEP 5: Tag and push images to DockerHub
      - name: Push Docker images to DockerHub
        run: |
          echo "ðŸš€ Pushing built images to DockerHub..."
          docker images

          # Define image names (same as docker-compose service names)
          services=(authservice userservice loggerservice nginx-gateway)

          for service in "${services[@]}"; do
            echo "Tagging and pushing $service..."
            docker tag "$service" ${{ secrets.DOCKERHUB_USERNAME }}/$service:$IMAGE_TAG
            docker push ${{ secrets.DOCKERHUB_USERNAME }}/$service:$IMAGE_TAG
          done

          echo "âœ… All images pushed successfully."

      # ðŸ§© STEP 6: Upload docker-compose.yml as artifact (optional)
      - name: Upload docker-compose.yml
        uses: actions/upload-artifact@v4
        with:
          name: docker-compose
          path: docker-compose.yml
          retention-days: 5
